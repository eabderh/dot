

# hint: use \; to seperate multiple tmux commands for key bindings

# UTF8 & COLOR SUPPORT --------------------------------------------------------

#set-option -g utf8 on
#set-window-option -g utf8 on
#set-option -g default-terminal "screen-256color"
# not supported in current version (1.6)
#set-option -g status-utf8 on
#unbind-key -n Tab


# KEY BIND OPTIONS ------------------------------------------------------------

# unbind all keys
unbind-key -a

# set timing on repeat bindings
set-option -g repeat-time 2000


# PREFIX ----------------------------------------------------------------------

# set prefix to 5 (five)
set-option -g prefix 5
bind-key '5' send-prefix


# way of changing prefix, replaced by bash commands
# # change prefix
# # <prefix>a sets prefix to <CTRL>a
# bind-key 'a' unbind-key 5 \; \
# 	set-option -g prefix C-a \; bind-key C-a send-prefix \;
# 
# # reset prefix
# # CTRL-@ sets prefix to 5
# bind-key -n C-@ unbind-key C-@ \; \
# 	set-option -g prefix 5 \; bind-key 5 send-prefix \;


# SESSION COMMANDS ------------------------------------------------------------

# detach
bind-key 'd' detach-client

# find
bind-key 'F' choose-tree -Z -O name
bind-key 'f' choose-tree -Z -O name -s

# kill
bind-key 'q' confirm-before kill-session

# new session
bind-key 's' command-prompt 'new-session -s %%'

# rename session
bind-key 'R' command-prompt 'rename-session %%'


# WINDOW COMMANDS -------------------------------------------------------------

# new window
bind-key 'w' new-window -c '#{pane_current_path}'

# rename window
bind-key 'r' command-prompt 'rename-window %%'

# move from window to window
bind-key -r ',' previous-window
bind-key -r '.' next-window
bind-key -n C-u previous-window
bind-key -n C-o next-window

# move to windows on each end
bind-key -r '<' select-window -t 0
bind-key -r '>' select-window -t 0 \; previous-window

# swap window with adjacent windows
bind-key -r '{' swap-window -d -t -1
bind-key -r '}' swap-window -d -t +1

# move windows between sessions
#bind-key 'M' command-prompt -p "send window to:" "move-window -t '%%'"

# reorder windows
bind-key 'p' move-window -r

# move window to first/last position
bind-key -r '[' set base-index 1 \; move-window -r \; move-window -t 0 \; set base-index 0
bind-key -r ']' move-window -t 999 \; move-window -r


# PANE COMMANDS ---------------------------------------------------------------

# rename pane
#bind-key r command-prompt 'select-pane -T %%'

# pane layout: tiled
bind-key '+' select-layout tiled

### pane layout: main-vertical
bind-key '\' select-layout main-vertical \; resize-pane -t 0 -x 83

# pane layout: horizontal
bind-key '-' select-layout even-horizontal

# pane layout: vertical
bind-key '=' select-layout even-vertical

# show command prompt
bind-key ':' command-prompt

# show pane numbers
#bind-key 'y' display-panes

# split pane vertically
bind-key ';' split-window -v 	-c '#{pane_current_path}'

# split pane horizontally
bind-key "\'" split-window -h 	-c '#{pane_current_path}'

# kill
bind-key 'e' kill-pane \; move-window -r

# swap with panel 0
bind-key 'i' swap-pane -d -t 0
# swap with panel before (up)
bind-key 'u' swap-pane -U
# swap with panel after (cycle -> 'o')
bind-key 'o' swap-pane -D

# pane movement
bind-key 'j' select-pane -D
bind-key 'k' select-pane -U
bind-key 'h' select-pane -L
bind-key 'l' select-pane -R
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-h select-pane -L
bind-key -n C-l select-pane -R

# resize pane to small (negligent)
bind-key 'n' resize-pane -y 8

# resize pane to big
bind-key 'b' resize-pane -y 36

# move panes between windows
#bind-key 'm' command-prompt -p "send pane to:" "join-pane -t ':%%'"

bind-key -r '(' resize-pane -U
bind-key -r ')' resize-pane -D
bind-key -r '9' resize-pane -L
bind-key -r '0' resize-pane -R

# mark pane
bind-key 'm' select-pane -m
bind-key 'M' select-pane -m

# move marked pane into current window
bind-key 'y' join-pane
bind-key 't' break-pane

# TODO: improve so that behavior is more like 'join-pane'
# move window with marked pane into current session
bind-key 'c' swap-window

# go to marked pane
bind-key 'g' switch-client -t'{marked}'


# UNUSED KEYS -----------------------------------------------------------------

# bind-key 'a'
# bind-key 'v'
# bind-key 'x'
# bind-key 'z'


# STATUS BAR ------------------------------------------------------------------

set-option -g status on

# disallow window renames
# occurence: ssh sometimes sets the window name to connection information
# (like example@example.com) using escape sequences, this option prevents the
# issue.
set-option -g allow-rename off

#set-option -g status-interval 5
#set-option -g status-justify centre

# center status
set-option -g status-justify centre

# left status
set-option -g status-left-length 20
# display host
set-option -g status-left " [#H] "

# right status
set-option -g status-right-length 20
# display time and date
set-option -g status-right "%F  %H:%M "



# STATUS BAR (WINDOW/PANE) ----------------------------------------------------

# put pane status bar at top
set-option -g pane-border-status top
# set pane status to current working directory
set-option -g pane-border-format "#{pane_title}"

# set window status (this is the center status in the status bar)
set-option -g window-status-format "#{?window_marked_flag,[, }#{window_index}:#{window_name}#{?window_marked_flag,], }"
#set-option -g window-status-current-format "#{?window_marked_flag,[, }#{window_index}:#{window_name}#{?window_marked_flag,], }"


# COLORS ----------------------------------------------------------------------

# window
set-window-option -g window-style 					fg=colour15

# pane border
set-option -g pane-border-style 					fg=colour240
set-option -g pane-active-border-style 				fg=colour8
set-option -g pane-border-lines 					heavy


# window status colors
set-option -g status-style 							bg=colour235,fg=colour249
set-window-option -g window-status-style 			bg=colour235,fg=colour249
set-window-option -g window-status-current-style 	bg=colour236,fg=colour249
#set-window-option -g window-status-attr dim
### set-option -g status-attr default

# message text
set-option -g message-style 						bg=colour236,fg=colour253

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour160 #green


# OTHER -----------------------------------------------------------------------

# "copy mode"
set-window-option -g mode-keys vi


